.SingleShopLayout {
    width: 100%;
    height: 100%;
    margin-top: 140px;
    &_container {
        height: fit-content;
        // display: flex;
        // flex-direction: column;
        &_top {
            box-sizing: border-box;
            height: 40px;
            display: flex;
            justify-content: space-around;
            &_box {
                width: fit-content;
                display: flex;
                height: 100%;
                align-items: center;
                &_btn{
                    padding: 5px 15px;
                    flex:1 1 auto;
                    text-align:center;
                    height: fit-content;
                    margin:0 5px 5px 5px;
                    width: fit-content;
                    box-sizing: border-box;
                    box-shadow: 0 0 0 1px #d9d9d9;
                    border: none;
                    color: #00C79D;
                    border-radius: 32px;
                    font-size: 12px;
                    text-decoration: none;
                    font-weight: bold;
                    transition: all .1s ease-in;
                    &:hover{
                        cursor: pointer;
                        background: transparent;
                        color: #fff;
                        box-sizing: border-box;
                        background: #00C79D;
                    }
                }
            }
        }
        &_bottom {
            box-sizing: border-box;
            border-bottom: 1px solid #d9d9d9;
            height: 40px;
        }
        &_children {
            // flex: 1 1 auto;
            width: 100%;
            max-width: 900px;
            margin: auto;
            border-left: 1px solid #d9d9d9;
            border-right: 1px solid #d9d9d9;
            overflow-x: hidden;
            // overflow-y: scroll;
            height: 100%;
            perspective: 2px;
        }
    }
}
.section1 {
    height: 300px;
}
.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 100vh;
  
  /* For text formatting. */
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
//   text-shadow: 0 0 5px #000;
}

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  
  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */ 
  z-index: -1;
}

/* The styling for the static div. */
.static {
  background: #fff;
}

/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
  background-image: url('https://placekitten.com/g/900/700');
}

.bg2::after {
  background-image: url('https://placekitten.com/g/800/600');
}